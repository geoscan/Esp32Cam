//
// RtspRequestHandler.cpp
//
// Created on:  Aug 24, 2020
// Author: Dmitry Murashov (d.murashov@geoscan.aero)
//

#include "RtspRequestHandler.hpp"

extern void parse(Rtsp::Request &, const void *, const size_t); // Parser generated by gnu flex/bison

asio::const_buffer RtspRequestHandler::handle(asio::const_buffer buffer)
{
	Rtsp::Request request;
	parse(request, buffer.data(), buffer.size());

	switch (request.requestType.val()) {

		case Rtsp::RequestType::Play:
			return handlePlay(request);

		case Rtsp::RequestType::Describe:
			return handleDescribe(request);

		case Rtsp::RequestType::Setup:
			return handleSetup(request);

		case Rtsp::RequestType::Pause:
			return handlePause(request);

		case Rtsp::RequestType::Teardown:
			return handleTeardown(request);

		default:
			return handleNotStated(request);
	}
}


asio::const_buffer RtspRequestHandler::handlePlay(const Rtsp::Request &)
{
	return {nullptr, 0};
}

asio::const_buffer RtspRequestHandler::handleDescribe(const Rtsp::Request &)
{
	return {nullptr, 0};
}

asio::const_buffer RtspRequestHandler::handleSetup(const Rtsp::Request &)
{
	return {nullptr, 0};
}

asio::const_buffer RtspRequestHandler::handlePause(const Rtsp::Request &)
{
	return {nullptr, 0};
}

asio::const_buffer RtspRequestHandler::handleTeardown(const Rtsp::Request &)
{
	return {nullptr, 0};
}

asio::const_buffer RtspRequestHandler::handleNotStated(const Rtsp::Request &)
{
	return {nullptr, 0};
}